<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.topmanager.oiltycoon.social.dao.mapper.UserMapper">

    <resultMap id="UserResultMap" type="User">
        <id column="id" property="id"/>
        <result property="ip" column="ip"/>
        <result property="userName" column="user_name"/>
        <result property="firstName" column="first_name"/>
        <result property="lastName" column="last_name"/>
        <result property="password" column="password"/>
        <result property="email" column="email"/>
        <association property="gameStats" select="getGameStatsByUserId" column="id"/>
        <collection property="roles" ofType="UserRole">
            <result column="role"/>
        </collection>
    </resultMap>

    <resultMap id="GameStatsResultMap" type="GameStats">
        <id property="id" column="g_id"/>
        <result property="gamesAmount" column="games_amount"/>
        <result property="winAmount" column="win_amount"/>
        <result property="tournamentAmount" column="tournament_amount"/>
        <result property="maxRevenue" column="max_revenue"/>
        <result property="maxRIF" column="maxrif"/>
        <result property="hoursInGame" column="hours_in_game"/>
        <result property="leaveGameAmount" column="leave_game_amount"/>
        <result property="complainAmount" column="complain_amount"/>
        <association property="user" select="findById" column="user_id"/>
        <collection property="rewards" ofType="Reward" resultMap="RewardResultMap"/>
        <collection property="achievements" ofType="Achievement" resultMap="AchievementResultMap"/>
    </resultMap>

    <resultMap id="RewardResultMap" type="Reward">
        <id property="id" column="r_id"/>
        <result property="date" column="r_date"/>
        <result property="name" column="r_name"/>
        <result property="description" column="r_description"/>
        <association property="gameStats" column="r_gameStatsId" resultMap="GameStatsResultMap"/>
    </resultMap>

    <resultMap id="AchievementResultMap" type="Achievement">
        <id property="id" column="a_id"/>
        <result property="name" column="a_name"/>
        <result property="description" column="a_description"/>
        <association property="gameStats" column="a_gameStatsId" resultMap="GameStatsResultMap"/>
    </resultMap>

    <resultMap id="VerificationTokenResultMap" type="VerificationToken">
        <id column="v_id" property="id"/>
        <result property="confirmDate" column="confirmDate"/>
        <result property="token" column="token"/>
        <association property="user" resultMap="UserResultMap" javaType="User"/>
    </resultMap>

    <select id="findByUserName" resultMap="UserResultMap">
        SELECT u.id, u.user_name, u.password, u.last_name, u.first_name, u.email, r.roles
        FROM user u
                 LEFT JOIN user_roles r on u.id = r.user_id
        WHERE u.user_name = #{userName}
    </select>

    <select id="findById" resultMap="UserResultMap">
        SELECT u.id, u.user_name, u.password, u.last_name, u.first_name, u.email, r.roles
        FROM user u
                 LEFT JOIN user_roles r on u.id = r.user_id
        WHERE u.id = #{userId}
    </select>

    <select id="findByEmail" resultMap="UserResultMap">
        SELECT u.id, u.user_name, u.password, u.last_name, u.first_name, u.email, r.roles
        FROM user u
                 LEFT JOIN user_roles r on u.id = r.user_id
        WHERE u.email = #{email}
    </select>

    <insert id="create" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO user (email, user_name, first_name, last_name, password)
        VALUES (#{email}, #{userName}, #{firstName}, #{lastName}, #{password})
    </insert>

    <insert id="createRoles">
        INSERT INTO user_roles(user_id, roles) VALUES
        <foreach collection="roles" item="r" index="index" open="(" separator="),(" close=")">
            #{id},
            #{r}
        </foreach>;
    </insert>

    <insert id="createGameStats" useGeneratedKeys="true" keyColumn="g_id" keyProperty="gameStats.id">
        INSERT INTO game_stats (games_amount,
                                win_amount,
                                tournament_amount,
                                max_revenue,
                                maxRIF,
                                hours_in_game,
                                leave_game_amount,
                                complain_amount,
                                user_id)
        VALUES (#{gameStats.gamesAmount},
                #{gameStats.winAmount},
                #{gameStats.tournamentAmount},
                #{gameStats.maxRevenue},
                #{gameStats.maxRIF},
                #{gameStats.hoursInGame},
                #{gameStats.leaveGameAmount},
                #{gameStats.complainAmount},
                #{id});
    </insert>

    <insert id="createAchievements">
        INSERT INTO achievement(name, description) VALUES
        <foreach collection="achievements" item="e" index="index" open="(" separator="),(" close=")">
            #{e.name},
            #{e.description}
        </foreach>;
    </insert>

    <insert id="createRewards">
        INSERT INTO reward(date, name, description) VALUES
        <foreach collection="rewards" item="e" index="index" open="(" separator="),(" close=")">
            #{e.date},
            #{e.name},
            #{e.description}
        </foreach>;
    </insert>

    <update id="update">
        UPDATE user SET first_name = #{firstName}, last_name = #{lastName}, password = #{password}, user_name = #{userName}
        WHERE id = #{id};
        DELETE FROM user_roles WHERE user_id = #{id};
        INSERT INTO user_roles(user_id, roles) VALUES
        <foreach collection="roles" item="r" index="index" open="(" separator="),(" close=")">
            #{id},
            #{r}
        </foreach>;
    </update>
    <update id="updateGameStats">
        UPDATE game_stats SET games_amount = #{gamesAmount},
                              win_amount = #{winAmount},
                              tournament_amount = #{tournamentAmount},
                              max_revenue = #{maxRevenue},
                              maxrif = #{maxRIF},
                              hours_in_game = #{hoursInGame},
                              leave_game_amount = #{leaveGameAmount},
                              complain_amount = #{complainAmount}
        WHERE id = #{id};
        DELETE FROM reward WHERE id IN (SELECT rewards_id FROM game_stats_rewards WHERE game_stats_id = #{id});
        DELETE FROM achievement WHERE id IN (SELECT achievements_id FROM game_stats_achievements WHERE game_stats_id = #{id});
    </update>

    <insert id="createVerificationToken">
        INSERT INTO verification_token (token, userId, confirmDate)
        VALUES (#{token}, #{user.id}, #{confirmDate})
    </insert>

    <select id="getVerificationToken" resultMap="VerificationTokenResultMap">
        SELECT vt.id as v_id,
               vt.userId,
               vt.confirmDate,
               vt.token,
               u.id,
               u.user_name,
               u.first_name,
               u.last_name,
               u.email,
               u.password,
               r.roles
        FROM verification_token vt
                 LEFT JOIN user u on vt.userId = u.id
                 LEFT JOIN user_roles r on u.id = r.user_id
        WHERE vt.token = #{uuid}
    </select>

    <delete id="deleteVerificationToken">
        DELETE
        FROM verification_token
        WHERE id = #{id}
    </delete>

    <delete id="delete">
        DELETE
        FROM user
        WHERE id = #{id}
    </delete>

    <select id="getGameStatsByUserId" resultMap="GameStatsResultMap">
        SELECT g.id,
               g.games_amount,
               g.win_amount,
               g.tournament_amount,
               g.max_revenue,
               g.maxrif,
               g.hours_in_game,
               g.leave_game_amount,
               g.complain_amount,
               g.user_id,
               a.id,
               a.name,
               a.description,
               r.id,
               r.name,
               r.date,
               r.description

        FROM game_stats g
                 LEFT JOIN achievement a on
                        a.id IN (SELECT achievements_id FROM game_stats_achievements WHERE game_stats_id = g.id)
                 LEFT JOIN reward r on
                        r.id IN (SELECT rewards_id FROM game_stats_rewards WHERE game_stats_id = g.id)
        WHERE g.user_id = #{userId}
    </select>

</mapper>