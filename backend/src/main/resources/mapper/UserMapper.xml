<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.topmanager.oiltycoon.social.dao.mapper.UserMapper">

    <resultMap id="UserResultMap" type="User">
        <id column="id" property="id"/>
        <result property="userName" column="userName"/>
        <result property="firstName" column="firstName"/>
        <result property="lastName" column="lastName"/>
        <result property="password" column="password"/>
        <result property="email" column="email"/>
        <collection property="roles" ofType="UserRole">
            <result column="role"/>
        </collection>
    </resultMap>

    <resultMap id="VerificationTokenResultMap" type="VerificationToken">
        <id column="v_id" property="id"/>
        <result property="confirmDate" column="confirmDate"/>
        <result property="token" column="token"/>
        <association property="user" resultMap="UserResultMap" javaType="User"/>
    </resultMap>

    <select id="findByUserName" resultMap="UserResultMap">
        SELECT u.id, u.userName, u.password, u.lastName, u.firstName, u.email, r.role
        FROM user u
                 LEFT JOIN user_role r on u.id = r.userId
        WHERE u.userName = #{userName}
    </select>

    <select id="findById" resultMap="UserResultMap">
        SELECT u.id, u.userName, u.password, u.lastName, u.firstName, u.email, r.role
        FROM user u
                 LEFT JOIN user_role r on u.id = r.userId
        WHERE u.id = #{userId}
    </select>

    <select id="findByEmail" resultMap="UserResultMap">
        SELECT u.id, u.userName, u.password, u.lastName, u.firstName, u.email, r.role
        FROM user u
                 LEFT JOIN user_role r on u.id = r.userId
        WHERE u.email = #{email}
    </select>

    <insert id="create" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO user (email, userName, firstName, lastName, password)
        VALUES (#{email}, #{userName}, #{firstName}, #{lastName}, #{password})
    </insert>

    <insert id="createRoles">
        INSERT INTO user_role(userId, role) VALUES
        <foreach collection="roles" item="r" index="index" open="(" separator="),(" close=")">
            #{id},
            #{r}
        </foreach>
    </insert>

    <update id="update">
        UPDATE user SET firstName = #{firstName}, lastName = #{lastName}, password = #{password}, userName = #{userName}
        WHERE id = #{id};
        DELETE FROM user_role WHERE userId = #{id};
        INSERT INTO user_role(userId, role) VALUES
        <foreach collection="roles" item="r" index="index" open="(" separator="),(" close=")">
            #{id},
            #{r}
        </foreach>;
    </update>

    <insert id="createVerificationToken">
        INSERT INTO verification_token (token, userId, confirmDate)
        VALUES (#{token}, #{user.id}, #{confirmDate})
    </insert>

    <select id="getVerificationToken" resultMap="VerificationTokenResultMap">
        SELECT vt.id as v_id,
               vt.userId,
               vt.confirmDate,
               vt.token,
               u.id,
               u.userName,
               u.firstName,
               u.lastName,
               u.email,
               u.password,
               r.role
        FROM verification_token vt
                 LEFT JOIN user u on vt.userId = u.id
                 LEFT JOIN user_role r on u.id = r.userId
        WHERE vt.token = #{uuid}
    </select>

    <delete id="deleteVerificationToken">
        DELETE
        FROM verification_token
        WHERE id = #{id}
    </delete>

    <delete id="delete">
        DELETE FROM user WHERE id=#{id}
    </delete>

</mapper>